by=c('lex_ordered_fusion_name',
'type')
) %>% filter(type=='shared')
StarF_overlapping_preds = StarF_overlapping_preds %>% rowwise() %>% mutate(proxy_fusion_name = paste0(sample, "|", FusionName)) %>%
select(proxy_fusion_name, type, sample, FusionName) %>% unique()
StarF_overlapping_preds
full_join(StarF_overlapping_preds,
all_pred_fusions_illum_support_indicated %>% filter(Illumina_support),
by=c('proxy_fusion_name'='lex_ordered_fusion_name',
'type')
)
StarF_overlapping_preds %>% filter(type=="shared")
StarF_overlapping_preds %>% filter(type=="unique")
write.table(StarF_overlapping_preds %>% rename(proxy_fusion_name = lex_ordered_fusion_name),
file="StarFusion_Illumina_supported_fusions.tsv", sep="\t", row.names=F, quote=F)
write.table(StarF_overlapping_preds,
file="StarFusion_Illumina_supported_fusions.tsv", sep="\t", row.names=F, quote=F)
setwd("~/BroadInstProjs/CTAT-LR-Fusion-Paper/github.CTAT-LRF-Paper/3.DepMap9Lines/3b.DepMap9Lines_Benchmarking")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data = read.table("data/DepMap_v1v2mrgd.ctatLRF_FI.consolidated.tsv.gz", header=T, sep="\t", com='') %>%
rename(sample=X.sample, fusion = X.FusionName)
data %>% head()
data %>% ggplot(aes(x=log10(LR_FFPM), y=log10(FFPM))) + geom_point() +
ggtitle("LR vs. SR fusion expression (FFPM)") +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth") +
geom_abline(intercept=0, slope=1, color='purple')
cor.test(x=log2(data$LR_FFPM), y=log2(data$FFPM), use='complete.obs')
TP_fusions = read.table("../3b.DepMap9Lines_Benchmarking/data/min_2.okPara_ignoreUnsure.results.scored", header=T, sep="\t", stringsAsFactors = F) %>%
filter(pred_result == "TP") %>%
select(sample, fusion, pred_result) %>% unique()
TP_fusions %>% head()
data = left_join(data, TP_fusions,
by=c('sample','fusion') )
# by read counts
data %>% filter(pred_result == "TP") %>%
mutate(num_SR = est_J + est_S) %>%
group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR))  %>% mutate(fusion = paste(fusion, 'iso', row_number())) %>% ungroup() %>%
#mutate(fusion = paste(fusion, LeftBreakpoint, RightBreakpoint)) %>%
#group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR)) %>% filter(row_number() == 1) %>% ungroup() %>%
select(sample, fusion, num_LR, num_SR) %>%
gather(key=read_type, value=read_count, num_LR, num_SR) %>%
ggplot(aes(x=fusion, y=read_count)) + geom_bar(stat='identity', position = 'dodge', aes(fill=read_type)) +
facet_grid(. ~ sample, scales = "free", space='free') +
scale_x_discrete(expand = c(0, 0.5))  +
#facet_wrap(~sample, scale='free') +
#
theme(axis.text.x = element_text(angle = 90, hjust = 1))
head(data)
# by FFPM
data %>% filter(pred_result == "TP") %>%
mutate(num_SR = est_J + est_S) %>%
rename(SR_FFPM = FFPM) %>%
group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR))  %>% mutate(fusion = paste(fusion, 'iso', row_number())) %>% ungroup() %>%
#mutate(fusion = paste(fusion, LeftBreakpoint, RightBreakpoint)) %>%
#group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR)) %>% filter(row_number() == 1) %>% ungroup() %>%
select(sample, fusion, LR_FFPM, SR_FFPM) %>%
gather(key=FFPM_type, value=FFPM, LR_FFPM, SR_FFPM) %>%
ggplot(aes(x=fusion, y=FFPM)) + geom_bar(stat='identity', position = 'dodge', aes(fill=FFPM_type)) +
facet_grid(. ~ sample, scales = "free", space='free') +
scale_x_discrete(expand = c(0, 0.5))  +
#facet_wrap(~sample, scale='free') +
#
theme(axis.text.x = element_text(angle = 90, hjust = 1))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data = read.table("data/DepMap_v1v2mrgd.ctatLRF_FI.consolidated.tsv.gz", header=T, sep="\t", com='') %>%
rename(sample=X.sample, fusion = X.FusionName)
data %>% head()
data %>% ggplot(aes(x=log10(LR_FFPM), y=log10(FFPM))) + geom_point() +
ggtitle("LR vs. SR fusion expression (FFPM)") +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth") +
geom_abline(intercept=0, slope=1, color='purple')
cor.test(x=log2(data$LR_FFPM), y=log2(data$FFPM), use='complete.obs')
TP_fusions = read.table("../3b.DepMap9Lines_Benchmarking/data/min_2.okPara_ignoreUnsure.results.scored", header=T, sep="\t", stringsAsFactors = F) %>%
filter(pred_result == "TP") %>%
select(sample, fusion, pred_result) %>% unique()
TP_fusions %>% head()
data = left_join(data, TP_fusions,
by=c('sample','fusion') )
# by read counts
data %>% filter(pred_result == "TP") %>%
mutate(num_SR = est_J + est_S) %>%
group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR))  %>% mutate(fusion = paste(fusion, 'iso', row_number())) %>% ungroup() %>%
#mutate(fusion = paste(fusion, LeftBreakpoint, RightBreakpoint)) %>%
#group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR)) %>% filter(row_number() == 1) %>% ungroup() %>%
select(sample, fusion, num_LR, num_SR) %>%
gather(key=read_type, value=read_count, num_LR, num_SR) %>%
ggplot(aes(x=fusion, y=read_count)) + geom_bar(stat='identity', position = 'dodge', aes(fill=read_type)) +
facet_grid(. ~ sample, scales = "free", space='free') +
scale_x_discrete(expand = c(0, 0.5))  +
#facet_wrap(~sample, scale='free') +
#
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# by FFPM
data %>% filter(pred_result == "TP") %>%
mutate(num_SR = est_J + est_S) %>%
rename(SR_FFPM = FFPM) %>%
group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR))  %>% mutate(fusion = paste(fusion, 'iso', row_number())) %>% ungroup() %>%
#mutate(fusion = paste(fusion, LeftBreakpoint, RightBreakpoint)) %>%
#group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR)) %>% filter(row_number() == 1) %>% ungroup() %>%
select(sample, fusion, LR_FFPM, SR_FFPM) %>%
gather(key=FFPM_type, value=FFPM, LR_FFPM, SR_FFPM) %>%
ggplot(aes(x=fusion, y=FFPM)) + geom_bar(stat='identity', position = 'dodge', aes(fill=FFPM_type)) +
facet_grid(. ~ sample, scales = "free", space='free') +
scale_x_discrete(expand = c(0, 0.5))  +
#facet_wrap(~sample, scale='free') +
#
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# label those fusions that have the most extreme difference with SR >> LR
SR_enriched_fusion_isoforms = data %>% filter(pred_result == "TP") %>%
mutate(num_SR = est_J + est_S) %>%
group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR))  %>%
mutate(fusion = paste(fusion, 'iso', row_number())) %>% ungroup() %>%
select(sample, fusion, LR_FFPM, FFPM) %>%
rename(SR_FFPM = FFPM) %>%
mutate(SR_enrichment = SR_FFPM / LR_FFPM) %>%
arrange(desc(SR_enrichment))
SR_enriched_fusion_isoforms %>% head()
data %>% filter(pred_result == "TP") %>%
mutate(num_SR = est_J + est_S) %>%
group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR))  %>% mutate(fusion = paste(fusion, 'iso', row_number())) %>% ungroup() %>%
select(sample, fusion, LR_FFPM, FFPM) %>%
rename(SR_FFPM = FFPM) %>%
ggplot(aes(x=log10(LR_FFPM), y=log10(SR_FFPM))) + geom_point() +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth") +
geom_abline(intercept=0, slope=1, color='purple') +
geom_point(data=SR_enriched_fusion_isoforms %>% filter(SR_enrichment>=3), color='red')  +
geom_text(data=SR_enriched_fusion_isoforms %>% filter(SR_enrichment>=3), aes(label=fusion))
SR_enriched_fusion_isoforms %>%
mutate(rn = row_number() ) %>%
ggplot(aes(x=rn, y=SR_enrichment)) + geom_point() + geom_abline(interceipt=1, slope=0, color='purple') +
scale_y_continuous(trans='log10') +
xlab("Fusion isoform ranked by SR_enrichment")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data = read.table("data/DepMap_v1v2mrgd.ctatLRF_FI.consolidated.tsv.gz", header=T, sep="\t", com='') %>%
rename(sample=X.sample, fusion = X.FusionName)
data %>% head()
data %>% ggplot(aes(x=log10(LR_FFPM), y=log10(FFPM))) + geom_point() +
ggtitle("LR vs. SR fusion expression (FFPM)") +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth") +
geom_abline(intercept=0, slope=1, color='purple')
cor.test(x=log2(data$LR_FFPM), y=log2(data$FFPM), use='complete.obs')
TP_fusions = read.table("../3b.DepMap9Lines_Benchmarking/3b.2.IncludeIlluminaSupportedFusions/data/min_2.okPara_ignoreUnsure.results.scored", header=T, sep="\t", stringsAsFactors = F) %>%
filter(pred_result == "TP") %>%
select(sample, fusion, pred_result) %>% unique()
TP_fusions %>% head()
data = left_join(data, TP_fusions,
by=c('sample','fusion') )
# by read counts
data %>% filter(pred_result == "TP") %>%
mutate(num_SR = est_J + est_S) %>%
group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR))  %>% mutate(fusion = paste(fusion, 'iso', row_number())) %>% ungroup() %>%
#mutate(fusion = paste(fusion, LeftBreakpoint, RightBreakpoint)) %>%
#group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR)) %>% filter(row_number() == 1) %>% ungroup() %>%
select(sample, fusion, num_LR, num_SR) %>%
gather(key=read_type, value=read_count, num_LR, num_SR) %>%
ggplot(aes(x=fusion, y=read_count)) + geom_bar(stat='identity', position = 'dodge', aes(fill=read_type)) +
facet_grid(. ~ sample, scales = "free", space='free') +
scale_x_discrete(expand = c(0, 0.5))  +
#facet_wrap(~sample, scale='free') +
#
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# by FFPM
data %>% filter(pred_result == "TP") %>%
mutate(num_SR = est_J + est_S) %>%
rename(SR_FFPM = FFPM) %>%
group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR))  %>% mutate(fusion = paste(fusion, 'iso', row_number())) %>% ungroup() %>%
#mutate(fusion = paste(fusion, LeftBreakpoint, RightBreakpoint)) %>%
#group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR)) %>% filter(row_number() == 1) %>% ungroup() %>%
select(sample, fusion, LR_FFPM, SR_FFPM) %>%
gather(key=FFPM_type, value=FFPM, LR_FFPM, SR_FFPM) %>%
ggplot(aes(x=fusion, y=FFPM)) + geom_bar(stat='identity', position = 'dodge', aes(fill=FFPM_type)) +
facet_grid(. ~ sample, scales = "free", space='free') +
scale_x_discrete(expand = c(0, 0.5))  +
#facet_wrap(~sample, scale='free') +
#
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# label those fusions that have the most extreme difference with SR >> LR
SR_enriched_fusion_isoforms = data %>% filter(pred_result == "TP") %>%
mutate(num_SR = est_J + est_S) %>%
group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR))  %>%
mutate(fusion = paste(fusion, 'iso', row_number())) %>% ungroup() %>%
select(sample, fusion, LR_FFPM, FFPM) %>%
rename(SR_FFPM = FFPM) %>%
mutate(SR_enrichment = SR_FFPM / LR_FFPM) %>%
arrange(desc(SR_enrichment))
SR_enriched_fusion_isoforms %>% head()
data %>% filter(pred_result == "TP") %>%
mutate(num_SR = est_J + est_S) %>%
group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR))  %>% mutate(fusion = paste(fusion, 'iso', row_number())) %>% ungroup() %>%
select(sample, fusion, LR_FFPM, FFPM) %>%
rename(SR_FFPM = FFPM) %>%
ggplot(aes(x=log10(LR_FFPM), y=log10(SR_FFPM))) + geom_point() +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth") +
geom_abline(intercept=0, slope=1, color='purple') +
geom_point(data=SR_enriched_fusion_isoforms %>% filter(SR_enrichment>=3), color='red')  +
geom_text(data=SR_enriched_fusion_isoforms %>% filter(SR_enrichment>=3), aes(label=fusion))
SR_enriched_fusion_isoforms %>%
mutate(rn = row_number() ) %>%
ggplot(aes(x=rn, y=SR_enrichment)) + geom_point() + geom_abline(interceipt=1, slope=0, color='purple') +
scale_y_continuous(trans='log10') +
xlab("Fusion isoform ranked by SR_enrichment")
# by FFPM
data %>% filter(pred_result == "TP") %>%
mutate(num_SR = est_J + est_S) %>%
rename(SR_FFPM = FFPM) %>%
group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR))  %>% mutate(fusion = paste(fusion, 'iso', row_number())) %>% ungroup() %>%
#mutate(fusion = paste(fusion, LeftBreakpoint, RightBreakpoint)) %>%
#group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR)) %>% filter(row_number() == 1) %>% ungroup() %>%
select(sample, fusion, LR_FFPM, SR_FFPM) %>%
gather(key=FFPM_type, value=FFPM, LR_FFPM, SR_FFPM) %>%
ggplot(aes(x=fusion, y=FFPM)) + geom_bar(stat='identity', position = 'dodge', aes(fill=FFPM_type)) +
facet_grid(. ~ sample, scales = "free", space='free') +
scale_x_discrete(expand = c(0, 0.5))  +
scale_y_continuous(trans='log10') +
#facet_wrap(~sample, scale='free') +
#
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# by FFPM
data %>% filter(pred_result == "TP") %>%
mutate(num_SR = est_J + est_S) %>%
rename(SR_FFPM = FFPM) %>%
group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR))  %>% mutate(fusion = paste(fusion, 'iso', row_number())) %>% ungroup() %>%
#mutate(fusion = paste(fusion, LeftBreakpoint, RightBreakpoint)) %>%
#group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR)) %>% filter(row_number() == 1) %>% ungroup() %>%
select(sample, fusion, LR_FFPM, SR_FFPM) %>%
gather(key=FFPM_type, value=FFPM, LR_FFPM, SR_FFPM) %>%
mutate(FFPM = FFPM * 100) %>%
ggplot(aes(x=fusion, y=FFPM)) + geom_bar(stat='identity', position = 'dodge', aes(fill=FFPM_type)) +
facet_grid(. ~ sample, scales = "free", space='free') +
scale_x_discrete(expand = c(0, 0.5))  +
scale_y_continuous(trans='log10') +
#facet_wrap(~sample, scale='free') +
#
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# by FFPM
data %>% filter(pred_result == "TP") %>%
mutate(num_SR = est_J + est_S) %>%
rename(SR_FFPM = FFPM) %>%
group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR))  %>% mutate(fusion = paste(fusion, 'iso', row_number())) %>% ungroup() %>%
#mutate(fusion = paste(fusion, LeftBreakpoint, RightBreakpoint)) %>%
#group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR)) %>% filter(row_number() == 1) %>% ungroup() %>%
select(sample, fusion, LR_FFPM, SR_FFPM) %>%
gather(key=FFPM_type, value=FFPM, LR_FFPM, SR_FFPM) %>%
mutate(FFPM = FFPM * 100) %>%
ggplot(aes(x=fusion, y=FFPM)) + geom_bar(stat='identity', position = 'dodge', aes(fill=FFPM_type)) +
facet_grid(. ~ sample, scales = "free", space='free') +
scale_x_discrete(expand = c(0, 0.5))  +
scale_y_continuous(trans='log10') +
#facet_wrap(~sample, scale='free') +
#
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ylab("FFPM * 100")
data %>% filter(pred_result == "TP") %>%
mutate(num_SR = est_J + est_S) %>%
filter(num_SR != 0)
data %>% filter(pred_result == "TP") %>%
mutate(num_SR = est_J + est_S) %>%
filter(num_SR == 0)
data %>% filter(pred_result == "TP") %>%
mutate(num_SR = est_J + est_S) %>%
filter(num_SR == 0 | is.na(num_SR))
data %>% filter(pred_result == "TP") %>%
mutate(num_SR = est_J + est_S) %>%
filter(is.na(num_LR)
data %>% filter(pred_result == "TP") %>%
mutate(num_SR = est_J + est_S) %>%
filter(is.na(num_LR))
data = read.table("data/DepMap_v1v2mrgd.ctatLRF_FI.consolidated.tsv.gz", header=T, sep="\t", com='') %>%
rename(sample=X.sample, fusion = X.FusionName)
data %>% head()
data %>% filter(num_LR ==  0)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data = read.table("data/DepMap_v1v2mrgd.ctatLRF_FI.consolidated.tsv.gz", header=T, sep="\t", com='') %>%
rename(sample=X.sample, fusion = X.FusionName)
data %>% head()
data %>% ggplot(aes(x=log10(LR_FFPM), y=log10(FFPM))) + geom_point() +
ggtitle("LR vs. SR fusion expression (FFPM)") +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth") +
geom_abline(intercept=0, slope=1, color='purple')
cor.test(x=log2(data$LR_FFPM), y=log2(data$FFPM), use='complete.obs')
TP_fusions = read.table("../3b.DepMap9Lines_Benchmarking/3b.2.IncludeIlluminaSupportedFusions/data/min_2.okPara_ignoreUnsure.results.scored",
header=T, sep="\t", stringsAsFactors = F) %>%
filter(pred_result == "TP") %>%
select(sample, fusion, pred_result) %>% unique()
TP_fusions %>% head()
data = left_join(data, TP_fusions,
by=c('sample','fusion') )
# by read counts
data %>% filter(pred_result == "TP") %>%
mutate(num_SR = est_J + est_S) %>%
group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR))  %>% mutate(fusion = paste(fusion, 'iso', row_number())) %>% ungroup() %>%
#mutate(fusion = paste(fusion, LeftBreakpoint, RightBreakpoint)) %>%
#group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR)) %>% filter(row_number() == 1) %>% ungroup() %>%
select(sample, fusion, num_LR, num_SR) %>%
gather(key=read_type, value=read_count, num_LR, num_SR) %>%
ggplot(aes(x=fusion, y=read_count)) + geom_bar(stat='identity', position = 'dodge', aes(fill=read_type)) +
facet_grid(. ~ sample, scales = "free", space='free') +
scale_x_discrete(expand = c(0, 0.5))  +
#facet_wrap(~sample, scale='free') +
#
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# by FFPM
data %>% filter(pred_result == "TP") %>%
mutate(num_SR = est_J + est_S) %>%
rename(SR_FFPM = FFPM) %>%
group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR))  %>% mutate(fusion = paste(fusion, 'iso', row_number())) %>% ungroup() %>%
#mutate(fusion = paste(fusion, LeftBreakpoint, RightBreakpoint)) %>%
#group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR)) %>% filter(row_number() == 1) %>% ungroup() %>%
select(sample, fusion, LR_FFPM, SR_FFPM) %>%
gather(key=FFPM_type, value=FFPM, LR_FFPM, SR_FFPM) %>%
mutate(FFPM = FFPM * 100) %>%
ggplot(aes(x=fusion, y=FFPM)) + geom_bar(stat='identity', position = 'dodge', aes(fill=FFPM_type)) +
facet_grid(. ~ sample, scales = "free", space='free') +
scale_x_discrete(expand = c(0, 0.5))  +
scale_y_continuous(trans='log10') +
#facet_wrap(~sample, scale='free') +
#
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ylab("FFPM * 100")
# label those fusions that have the most extreme difference with SR >> LR
SR_enriched_fusion_isoforms = data %>% filter(pred_result == "TP") %>%
mutate(num_SR = est_J + est_S) %>%
group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR))  %>%
mutate(fusion = paste(fusion, 'iso', row_number())) %>% ungroup() %>%
select(sample, fusion, LR_FFPM, FFPM) %>%
rename(SR_FFPM = FFPM) %>%
mutate(SR_enrichment = SR_FFPM / LR_FFPM) %>%
arrange(desc(SR_enrichment))
SR_enriched_fusion_isoforms %>% head()
data %>% filter(pred_result == "TP") %>%
mutate(num_SR = est_J + est_S) %>%
group_by(sample, fusion) %>% arrange(desc(num_LR), desc(num_SR))  %>% mutate(fusion = paste(fusion, 'iso', row_number())) %>% ungroup() %>%
select(sample, fusion, LR_FFPM, FFPM) %>%
rename(SR_FFPM = FFPM) %>%
ggplot(aes(x=log10(LR_FFPM), y=log10(SR_FFPM))) + geom_point() +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth") +
geom_abline(intercept=0, slope=1, color='purple') +
geom_point(data=SR_enriched_fusion_isoforms %>% filter(SR_enrichment>=3), color='red')  +
geom_text(data=SR_enriched_fusion_isoforms %>% filter(SR_enrichment>=3), aes(label=fusion))
SR_enriched_fusion_isoforms %>%
mutate(rn = row_number() ) %>%
ggplot(aes(x=rn, y=SR_enrichment)) + geom_point() + geom_abline(interceipt=1, slope=0, color='purple') +
scale_y_continuous(trans='log10') +
xlab("Fusion isoform ranked by SR_enrichment")
setwd("~/BroadInstProjs/CTAT-LR-Fusion-Paper/github.CTAT-LRF-Paper/3.DepMap9Lines/3a.CTAT_DepMap9Lines/3a.1.CTAT_LRF_STARF_FI_comparison")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
ctat_LR_FI_data = read.table("data/DepMap_v1v2mrgd.ctatLRF_FI.consolidated.tsv.gz", header=T, sep="\t", stringsAsFactors = F)
head(ctat_LR_FI_data)
ctat_LR_FI_data = read.table("data/DepMap_v1v2mrgd.ctatLRF_FI.consolidated.tsv.gz", header=T, sep="\t", stringsAsFactors = F, com='')
ctat_LR_FI_data = read.table("data/DepMap_v1v2mrgd.ctatLRF_FI.consolidated.tsv.gz", header=T, sep="\t", stringsAsFactors = F, com='')
ctat_LR_FI_data  %>% head()
ctat_LR_FI_data = read.table("data/DepMap_v1v2mrgd.ctatLRF_FI.consolidated.tsv.gz", header=T, sep="\t", stringsAsFactors = F, com='') %>%
rename(sample = X.sample, FusionName = X.FusionName, SR_FFPM = FFPM) %>%
mutate(num_SR = est_J + est_S)
ctat_LR_FI_data  %>% head()
ctat_LR_FI_data = read.table("data/DepMap_v1v2mrgd.ctatLRF_FI.consolidated.tsv.gz", header=T, sep="\t", stringsAsFactors = F, com='') %>%
rename(sample = X.sample, FusionName = X.FusionName, SR_FFPM = FFPM) %>%
mutate(num_SR = est_J + est_S) %>%
mutate(num_SR = ifelse(is.na(num_SR), 0, num_SR))
ctat_LR_FI_data  %>% head()
FI_data = read.table("data/DepMap.v1v2mrgd.FI.consolidated.tsv.gz", header=T, sep="\t", stringsAsFactors = F, com='')
head(FI_data)
FI_data = read.table("data/DepMap.v1v2mrgd.FI.consolidated.tsv.gz", header=T, sep="\t", stringsAsFactors = F, com='') %>%
rename(sample = X.sample, FusionName = X.FusionName, SR_FFPM = FFPM) %>%
mutate(num_SR = est_J + est_S)
head(FI_data)
starF_data = read.table("data/DepMap.v1v2mrgd.StarF.consolidated.tsv.gz", header=T, sep="\t", stringsAsFactors = F, com='')
starF_data = read.table("data/DepMap.v1v2mrgd.StarF.consolidated.tsv.gz", header=T, sep="\t", stringsAsFactors = F, com='')
head(starF_data)
starF_data = read.table("data/DepMap.v1v2mrgd.StarF.consolidated.tsv.gz", header=T, sep="\t", stringsAsFactors = F, com='') %>%
rename(sample = X.sample, FusionName = X.FusionName, SR_FFPM = FFPM) %>%
mutate(num_SR = est_J + est_S)
head(starF_data)
all_data = bind_rows(ctat_LR_FI_data  %>% select(sample, FusionName, num_LR, LR_FFPM) %>%
rename(num_reads = num_LR, FFPM = LR_FFPM) %>% mutate(type='LRF'),
ctat_LR_FI_data %>% select(sample, FusionName, num_SR, SR_FFPM) %>%
rename(num_reads = num_SR, FFPM = SR_FFPM) %>%
mutate(type='LRF_FI'),
FI_data %>% select(ample, FusionName, num_SR, SR_FFPM) %>%
rename(num_reads = num_SR, FFPM = SR_FFPM) %>%
mutate(type='FI'),
starF_data %>% select(ample, FusionName, num_SR, SR_FFPM) %>%
rename(num_reads = num_SR, FFPM = SR_FFPM) %>%
mutate(type='STARF')
)
all_data = bind_rows(ctat_LR_FI_data  %>% select(sample, FusionName, num_LR, LR_FFPM) %>%
rename(num_reads = num_LR, FFPM = LR_FFPM) %>% mutate(type='LRF'),
ctat_LR_FI_data %>% select(sample, FusionName, num_SR, SR_FFPM) %>%
rename(num_reads = num_SR, FFPM = SR_FFPM) %>%
mutate(type='LRF_FI'),
FI_data %>% select(sample, FusionName, num_SR, SR_FFPM) %>%
rename(num_reads = num_SR, FFPM = SR_FFPM) %>%
mutate(type='FI'),
starF_data %>% select(sample, FusionName, num_SR, SR_FFPM) %>%
rename(num_reads = num_SR, FFPM = SR_FFPM) %>%
mutate(type='STARF')
)
all_data %>% head()
all_data %>% select(sample, FusionName, num_reads, type) %>%
spread(key=type, value=num_reads)
all_data = bind_rows(ctat_LR_FI_data  %>% select(sample, FusionName, LeftBreakpoint, RightBreakpoint, num_LR, LR_FFPM) %>%
rename(num_reads = num_LR, FFPM = LR_FFPM) %>% mutate(type='LRF'),
ctat_LR_FI_data %>% select(sample, FusionName, LeftBreakpoint, RightBreakpoint, num_SR, SR_FFPM) %>%
rename(num_reads = num_SR, FFPM = SR_FFPM) %>%
mutate(type='LRF_FI'),
FI_data %>% select(sample, FusionName, LeftBreakpoint, RightBreakpoint, num_SR, SR_FFPM) %>%
rename(num_reads = num_SR, FFPM = SR_FFPM) %>%
mutate(type='FI'),
starF_data %>% select(sample, FusionName, LeftBreakpoint, RightBreakpoint, num_SR, SR_FFPM) %>%
rename(num_reads = num_SR, FFPM = SR_FFPM) %>%
mutate(type='STARF')
)
all_data %>% head()
all_data %>% select(sample, FusionName, num_reads, type) %>%
spread(key=type, value=num_reads, sample, FusionName, LeftBreakpoint, RightBreakpoint)
all_data %>% select(sample, FusionName, LeftBreakpoint, RightBreakpoint, num_reads, type) %>%
spread(key=type, value=num_reads, sample, FusionName, LeftBreakpoint, RightBreakpoint)
all_data %>% select(sample, FusionName, LeftBreakpoint, RightBreakpoint, num_reads, type) %>%
spread(key=type, value=num_reads)
all_data = bind_rows(ctat_LR_FI_data  %>% select(sample, FusionName, LeftBreakpoint, RightBreakpoint, num_LR, LR_FFPM) %>%
rename(num_reads = num_LR, FFPM = LR_FFPM) %>% mutate(type='LRF'),
ctat_LR_FI_data %>% select(sample, FusionName, LeftBreakpoint, RightBreakpoint, num_SR, SR_FFPM) %>%
rename(num_reads = num_SR, FFPM = SR_FFPM) %>% filter(num_reads > 0) %>%
mutate(type='LRF_FI'),
FI_data %>% select(sample, FusionName, LeftBreakpoint, RightBreakpoint, num_SR, SR_FFPM) %>%
rename(num_reads = num_SR, FFPM = SR_FFPM) %>%
mutate(type='FI'),
starF_data %>% select(sample, FusionName, LeftBreakpoint, RightBreakpoint, num_SR, SR_FFPM) %>%
rename(num_reads = num_SR, FFPM = SR_FFPM) %>%
mutate(type='STARF')
)
all_data %>% head()
all_data %>% select(sample, FusionName, LeftBreakpoint, RightBreakpoint, num_reads, type) %>%
spread(key=type, value=num_reads)
all_data_spread = all_data %>% select(sample, FusionName, LeftBreakpoint, RightBreakpoint, num_reads, type) %>%
spread(key=type, value=num_reads)
all_data_spread %>% head()
all_data_spread = all_data %>% select(sample, FusionName, LeftBreakpoint, RightBreakpoint, num_reads, type) %>%
spread(key=type, value=num_reads, fill=0)
all_data_spread %>% head()
all_data_spread %>% filter( STARF > 0 & LRF == 0
all_data_spread %>% filter( STARF > 0 & LRF == 0)
nrow(all_data_spread)
TP_fusions = read.table("data/min_2.okPara_ignoreUnsure.results.scored")
TP_fusions = read.table("data/min_2.okPara_ignoreUnsure.results.scored", sep="\t", header=T, stringsAsFactors = F)
TP_fusions %>% head()
TP_fusions = read.table("data/min_2.okPara_ignoreUnsure.results.scored", sep="\t", header=T, stringsAsFactors = F) %>%
filter(pred_result == "TP") %>%
filter(prog == "ctat-LR-fusion.v0.11.0") %>%
select(sample, fusion)
TP_fusions %>% head()
TP_fusions = read.table("data/min_2.okPara_ignoreUnsure.results.scored", sep="\t", header=T, stringsAsFactors = F) %>%
filter(pred_result == "TP") %>%
filter(prog == "ctat-LR-fusion.v0.11.0") %>%
select(sample, fusion)
TP_fusions
TP_fusions = read.table("data/min_2.okPara_ignoreUnsure.results.scored", sep="\t", header=T, stringsAsFactors = F) %>%
filter(pred_result == "TP") %>%
filter(prog == "ctat-LR-fusion.v0.11.0") %>%
select(sample, fusion) %>% unique()
TP_fusions
left_join(TP_fusions, all_data_spread)
left_join(TP_fusions, all_data_spread) %>%
filter(LRF == 0)
TP_fusions = read.table("data/min_2.okPara_ignoreUnsure.results.scored", sep="\t", header=T, stringsAsFactors = F) %>%
filter(pred_result == "TP") %>%
filter(prog == "ctat-LR-fusion.v0.11.0") %>%
select(sample, fusion) %>% unique() %>%
rename(FusionName = fusion)
TP_fusions
left_join(TP_fusions, all_data_spread,
by=c('sample', 'FusionName') %>%
filter(LRF == 0)
left_join(TP_fusions, all_data_spread,
by=c('sample', 'FusionName') ) %>%
filter(LRF == 0)
TP_fusions = left_join(TP_fusions, all_data_spread,
by=c('sample', 'FusionName') )
TP_fusions
TP_fusions = left_join(TP_fusions, all_data_spread,
by=c('sample', 'FusionName') )
TP_fusions %>% arrange(desc(LRF))
TP_fusions = read.table("data/min_2.okPara_ignoreUnsure.results.scored", sep="\t", header=T, stringsAsFactors = F) %>%
filter(pred_result == "TP") %>%
filter(prog == "ctat-LR-fusion.v0.11.0") %>%
select(sample, fusion) %>% unique() %>%
rename(FusionName = fusion)
TP_fusions
TP_fusions = left_join(TP_fusions, all_data_spread,
by=c('sample', 'FusionName') )
TP_fusions %>% arrange(desc(LRF))
TP_fusions %>%
filter(LRF == 0)
